# Dockerfile for backend-only deployment on Render.com
# This is the simplest option for Render.com deployment

FROM eclipse-temurin:21-jdk AS build
WORKDIR /app
COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .
RUN chmod +x ./mvnw
RUN ./mvnw dependency:go-offline -B
COPY src ./src
RUN ./mvnw clean package -DskipTests

# Production stage
FROM eclipse-temurin:21-jre

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r appuser && useradd -r -g appuser appuser

WORKDIR /app
COPY --from=build /app/target/*.jar app.jar
COPY render-deploy.sh .

# Make script executable
RUN chmod +x render-deploy.sh

# Create logs directory
RUN mkdir -p /app/logs
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Set default port for Render.com
ENV PORT=8080

# Expose port
EXPOSE $PORT

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=3 \
    CMD curl -f http://localhost:${PORT}/actuator/health || exit 1

# Use the deployment script
ENTRYPOINT ["./render-deploy.sh"]
